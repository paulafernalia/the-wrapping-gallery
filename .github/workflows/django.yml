name: Django CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        cd wrapping
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set environment variables
      env:
        TEST: '1'  # Set TEST environment variable for test settings
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SERVICE_ROLE_KEY: ${{ secrets.SERVICE_ROLE_KEY }}
        SUPABASE_BUCKET_NAME: ${{ secrets.SUPABASE_BUCKET_NAME }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        MODE: ${{ env.MODE }}
      run: |
        echo "TEST=${TEST}" >> $GITHUB_ENV
        echo "SUPABASE_URL=${SUPABASE_URL}" >> $GITHUB_ENV
        echo "SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY}" >> $GITHUB_ENV
        echo "SUPABASE_BUCKET_NAME=${SUPABASE_BUCKET_NAME}" >> $GITHUB_ENV
        echo "DB_NAME=${DB_NAME}" >> $GITHUB_ENV
        echo "DB_USER=${DB_USER}" >> $GITHUB_ENV
        echo "DB_PASSWORD=${DB_PASSWORD}" >> $GITHUB_ENV
        echo "DB_HOST=${DB_HOST}" >> $GITHUB_ENV
        echo "DB_PORT=${DB_PORT}" >> $GITHUB_ENV
        echo "MODE=${MODE}" >> $GITHUB_ENV

    - name: Run Tests
      run: |
        cd wrapping
        python manage.py test --keepdb

